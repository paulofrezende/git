# depois de instalar o git, é preciso ir no github e criar as chaves ssh para poder fazer os push

# Git init (para inicializar o git em uma pasta e começar o versionamento)

# Git add (arquivo) ou . (Para adicionar tudo)

# git commit (arquivo) ou sem nada para mandar tudo -m 'mensagem' 

# git status: para saber o que deve subir ou não 

# git push: para mandar as informações para o github

# git branch -M main

# git remote add origin git@github.com:paulofrezende/test.git

# git push -u origin main

#
Para voltar para um commit específico, você pode usar o comando:

git checkout <commit-hash>

https://blog.betrybe.com/git/git-push/


# para visualizar as branches: 
git branch 

# para criar uma branch 
git branch <nome da branch>   |  git branch -b <nome da branch> (alºem de criar já muda para a branch criada )

# para mudar de branch 
git checkout <nome da branch> 

* sempre a branch é criada a partir daquele que você está. Sempre crie uma branch a partir da main

* stash volta para o status anterior da branch. Se vc tiver feito alguma coisa vai ficar 
o que vc fazer
git stash -m 'algum comentario' 
+ para listar as stahes 
git stash list 
+ para voltar a stash 
git stash apply {numero da stash da lista}



* para fazer o merge vc tem que estar na branch padrão e informar a branch que vc quer trazer 
informações 
+ estando na main 
git merge produto 
+ vc vai trazer as informações da branch de produto para a main 


*tags para marcar uma tag (como release) do seu sistema 
git tag -a {versao da tag} -m {message}
+ para mostrar as tags 
git tag 
+ para voltar uma tag 
git checkout {versao da tag}
+ para mostrar o conteudo de uma tag 
git show {versao da tag}